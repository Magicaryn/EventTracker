<div class="container-sm">
        <div class="alert"></div>
    <div class="col-12 col-md-10 p-2 rounded text-center" style="border:6px solid rgb(68, 101, 171)">
        <h1 style="font-family: 'Roboto Condensed',sans-serif; font-weight:bolder; text-decoration:underline"
            user="{{id}}">Welcome, {{username}}</h1>
    </div>
    <!-- Button to create a writeup -->
    <div style="padding: 40px;">
    
    </div>

    <div class="row">
        <div class="col-12 col-sm-3 rounded">
                <h2 style="font-family: 'Roboto Condensed',sans-serif; font-weight:bolder; margin-bottom: 30px;">Things to do: </h2>
            <a href="/writeup" class="btn btn-primary" style="background-color: rgb(68, 101, 171);" id="#writeUpForm">
                Create Write Up
            </a>
        </div>

        <!-- Writeups that have not been acknowledged -->
        <div class="col-12 col-sm-6 rounded">
            {{#if writeups}}
            {{#each writeups}}
            <p>{{this.user.username}} has not acknowledged the infraction {{this.type}} for {{this.reason}}</p>
            <!-- Button to view an unacknowledged writeup -->
            <button type="button" class="btn btn-primary open-modal-button" style="background-color: rgb(68, 101, 171);" data-toggle="modal"
                data-target="#writeUpModal" data-index="{{@index}}">
                View
            </button>
            <!-- Modals for each unacknowledged writeup -->
            <div class="modal fade" title="{{id}}" id="WriteUp{{@index}}" tabindex="-1" role="dialog"
                aria-labelledby="writeUpModalLabel" aria-hidden="true" data-bs-backdrop="static">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <div>
                                <h5 class="modal-title" style="font-family: 'Roboto Condensed',sans-serif; font-weight:bolder;" id="writeUpModalLabel">Infraction</h5>
                                <label for="warningInfo"></label>
                                <p>This is a <b>{{this.type}}</b> for the event that happened on: {{format_date
                                    this.date_created}}</p>
                                <p><b>Infraction</b>: {{this.reason}}</p>
                                <p><b>Created by</b>: {{manager}}</p>
                                <p><b>Description of the event</b>: "{{content}}"</p>
                            </div>
                        </div>
                        <div class="modal-body">
                            <form>
                                {{#each comments}}
                                <div class="form-group">
                                    <label for="commentsTextarea">Commented by - {{this.user.username}}:</label>
                                    <p>{{this.content}}</p>
                                </div>
                                {{/each}}
                                <div class="form-group">
                                    <label for="textInput">Questions/Comments/Concerns:</label>
                                    <input type="text" class="form-control" id="textInput">
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-danger" style="background-color: rgb(149, 18, 18);" data-bs-dismiss="modal"
                                id="deletebtns">Delete</button>
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                            <button type="button" class="btn btn-primary" style="background-color: rgb(68, 101, 171);" data-bs-dismiss="modal" id="commentsbtn">Add
                                Comments</button>
                        </div>
                    </div>
                </div>
            </div>
            {{/each}}
            {{/if}}
        </div>
    </div>
</div>

<script>
    // Delete button 
    document.addEventListener("DOMContentLoaded", function () {
        const deleteButtons = document.querySelectorAll(".modal-footer #deletebtns");
        deleteButtons.forEach(function (button) {
            button.addEventListener("click", async function (event) {

                const writeup_id = parseInt(this.closest(".modal").title);

                if (writeup_id) {
                    const response = await fetch('/api/users/delete', {
                        method: 'DELETE',
                        body: JSON.stringify({ writeup_id }),
                        headers: { 'Content-Type': 'application/json' },
                    });

                    if (response.ok) {
                        window.location.replace('/dashboard');
                    } else {
                        alert('Failed to delete Writeup, please try again')
                    }
                }
            });
        });
    });

    document.addEventListener("click", function (event) {
        if (event.target.classList.contains("open-modal-button")) {
            var index = event.target.getAttribute("data-index");
            var modalId = "WriteUp" + index;

            $('#' + modalId).modal('show');
        }

    });

    document.addEventListener("DOMContentLoaded", function () {
        const commentButtons = document.querySelectorAll(".modal-footer #commentsbtn");
        commentButtons.forEach(function (button) {
            button.addEventListener("click", async function (event) {

                const modalId = this.closest(".modal").id;
                const textInput = document.querySelector(`#${modalId} #textInput`);
                const content = textInput.value;
                const writeup_id = parseInt(this.closest(".modal").title);
                const user_id = parseInt(document.querySelector("p[user]").getAttribute("user"));
                const alert = `<div class="alert alert-danger" role="alert">Failed to add comment. Try again.</div>`;

                if (content && user_id && writeup_id) {
                    const response = await fetch('/api/users/comment', {
                        method: 'POST',
                        body: JSON.stringify({ content, user_id, writeup_id }),
                        headers: { 'Content-Type': 'application/json' },
                    });

                    if (response.ok) {
                        window.location.replace('/dashboard');
                    } else {
                        document.querySelector(".alert").innerHTML = alert;
                    }
                }
            });
        });
    });

</script>